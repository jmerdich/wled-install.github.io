name: nightly_build_ac_next_major

on:
  workflow_run:
    workflows: [nightly_build_ac]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Set up Node.js
      uses: actions/setup-node@v4
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
        wget https://github.com/Aircoookie/WLED/archive/refs/heads/0_15.zip -O /tmp/mm.zip
        unzip /tmp/mm.zip -d /tmp
    - name: Run PlatformIO
      run: |
        cd /tmp/WLED-0_15
        echo " " >> platformio.ini
        echo '[env:esp32dev_are]' >> platformio.ini
        echo 'extends = env:esp32dev' >> platformio.ini
        echo 'build_flags = -D WLED_RELEASE_NAME=ESP32_ARE ${env:esp32dev.build_flags} -D USERMOD_AUDIOREACTIVE' >> platformio.ini
        echo 'lib_deps =' >> platformio.ini
        echo '  ${env:esp32dev.lib_deps}' >> platformio.ini
        echo '  https://github.com/blazoncek/arduinoFFT.git' >> platformio.ini
        echo " " >> platformio.ini
        echo '[env:esp32_are_eth]' >> platformio.ini
        echo 'extends = env:esp32_eth' >> platformio.ini
        echo 'build_flags = -D WLED_RELEASE_NAME=ESP32_ARE_Ethernet ${env:esp32_eth.build_flags} -D USERMOD_AUDIOREACTIVE' >> platformio.ini
        echo 'lib_deps =' >> platformio.ini
        echo '  ${env:esp32_eth.lib_deps}' >> platformio.ini
        echo '  https://github.com/blazoncek/arduinoFFT.git' >> platformio.ini
        echo '[env:esp32c3dev_NB]'  >> platformio.ini
        echo 'extends = env:esp32c3dev' >> platformio.ini
        echo 'build_flags = -D WLED_RELEASE_NAME=ESP32C3_4MB ${env:esp32c3dev.build_flags}' >> platformio.ini
        echo '[env:lolin_s2_mini_NB]'  >> platformio.ini
        echo 'extends = env:lolin_s2_mini' >> platformio.ini
        echo 'build_flags = -D WLED_RELEASE_NAME=ESP32S2_4MB ${env:lolin_s2_mini.build_flags}' >> platformio.ini
        echo '[env:esp32s3dev_8MB_NB]'  >> platformio.ini
        echo 'extends = env:esp32s3dev_8MB' >> platformio.ini
        echo 'build_flags = -D WLED_RELEASE_NAME=ESP32S3_8MB ${env:esp32s3dev_8MB.build_flags}' >> platformio.ini
        echo '[env:esp32s3dev_4MB_NB]'  >> platformio.ini
        echo 'extends = env:esp32s3dev_8MB' >> platformio.ini
        echo 'board = adafruit_feather_esp32s3' >> platformio.ini
        echo 'board_build.partitions = tools/WLED_ESP32_4MB_1MB_FS.csv' >> platformio.ini
        echo 'build_flags = -D WLED_RELEASE_NAME=ESP32S3_4MB ${env:esp32s3dev_8MB.build_flags}' >> platformio.ini
        echo '[env:esp32s3dev_16MB_NB]'  >> platformio.ini
        echo 'extends = env:esp32s3dev_8MB' >> platformio.ini
        echo 'board = adafruit_feather_esp32s3' >> platformio.ini
        echo 'board_build.partitions = tools/WLED_ESP32_16MB.csv' >> platformio.ini
        echo 'build_flags = -D WLED_RELEASE_NAME=ESP32S3_16MB ${env:esp32s3dev_8MB.build_flags}' >> platformio.ini
        npm install
        pio run -e esp32dev || pio run -e esp32dev || true
        pio run -e nodemcuv2 || pio run -e nodemcuv2 || true
        pio run -e esp8266_2m  || pio run -e esp8266_2m || true
        pio run -e esp32_eth || pio run -e esp32_eth || true
        pio run -e esp32dev_are || pio run -e esp32dev_are || true
        pio run -e esp32_are_eth || pio run -e esp32_are_eth || true
        pio run -e esp32c3dev_NB || pio run -e esp32c3dev_NB || true
        pio run -e lolin_s2_mini_NB || pio run -e lolin_s2_mini_NB || true
        pio run -e esp32s3dev_8MB_NB || pio run -e esp32s3dev_8MB_NB || true
        pio run -e esp32s3dev_4MB_NB || pio run -e esp32s3dev_4MB_NB || true
        pio run -e esp32s3dev_16MB_NB || pio run -e esp32s3dev_16MB_NB || true
        cat platformio.ini
      env:
        PLATFORMIO_CI_SRC: /tmp/WLED-0_15
    - name: Copy Files
      run: |
        cd $GITHUB_WORKSPACE
        git rm -r $GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build_next_major/*.bin || true
        cp /tmp/WLED-0_15/build_output/release/*.bin $GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build_next_major/
        date -I | tr -d '\n' >$GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build_next_major/lastupdate.txt
        echo -n ", version: " >>$GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build_next_major/lastupdate.txt
        versionvalue=($(jq -r '.version' /tmp/WLED-0_15/package.json))
        echo -n "$versionvalue" >>$GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build_next_major/lastupdate.txt
    - name: Commit Files
      run: |
        cd $GITHUB_WORKSPACE
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git add $GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build_next_major/*.bin
        git add $GITHUB_WORKSPACE/bin_dir/1_Standard_version/Nightly_build_next_major/lastupdate.txt
        git commit -m "Commit AC Nightly Build NextMajor"
        git push origin main
